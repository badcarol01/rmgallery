{"version":3,"sources":["components/gallery/Gallery.js","components/showcase/Showcase.js","img/performics_logo_white.svg","App.js","index.js"],"names":["Gallery","useState","gallery","setGallery","loading","setLoading","color","getData","a","fetch","res","json","data","feed","entry","useEffect","mounted","className","map","value","key","src","gsx$previmg","$t","alt","gsx$tempname","gsx$desc","gsx$devicepc","gsx$devicemobile","href","gsx$demolink","target","rel","data-temp","gsx$tempid","size","Showcase","showcaseList","setshowcaseList","filter_dimension","filter_platform","filter_device","filter_brand","filter_list","i","length","push","gsx$platform","arrPlatform","toString","split","filter","v","indexOf","gsx$device","arrDevice","gsx$brand","gsx$dimension","arrDimen","filterDataArr","displayRelatedContainer","containers","document","querySelectorAll","classes","join","dimenRegex","RegExp","forEach","eContainer","elClasses","getAttribute","replace","iBrand","test","style","display","toggle","e","checked","splice","item","onChange","type","id","htmlFor","dimension","device","platform","name","banner-brand","gsx$previewimg","App","showGallery","setshowGallery","showShowcase","setshowShowcase","logo","width","onClick","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9342094e.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport './gallery.scss';\r\n\r\nconst Gallery = () => {\r\n    const [gallery, setGallery] = useState([])\r\n    const [loading, setLoading] = useState(false)\r\n    let [color] = useState(\"#1E9A4B\");\r\n\r\n    const getData = async () => {\r\n        const res = await fetch(\"https://spreadsheets.google.com/feeds/list/1kJl_ioUAK1umhl9oCHF8Oo7u698QdngllHuwerOFpIo/2/public/values?alt=json\")\r\n        const data = await res.json()\r\n        setGallery(data.feed.entry)\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        let mounted = true\r\n        if (mounted) {\r\n            getData()\r\n            setLoading(true)\r\n        }\r\n        return function cleanup() {\r\n            mounted = false\r\n        }\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            {!loading ?\r\n                <ClipLoader color={color} size={180}></ClipLoader>\r\n                :\r\n                <div className=\"row\">\r\n                    {gallery.map((value, key) => {\r\n\r\n                        return <div className=\"col-xs-12 col-sm-6 col-md-3 text-center mb-5 align-items-stretch d-flex flex-column align-items-stretch\" key={key} >\r\n                            <img src={value.gsx$previmg.$t} alt=\"pfxrichmedia\" className=\"card-img-top rmThumb\" />\r\n                            <div className=\"card-body text-start\">\r\n                                <h5 className=\"card-title\">{value.gsx$tempname.$t}</h5>\r\n                                <div className=\"card-text\">{value.gsx$desc.$t}</div>\r\n                            </div>\r\n                            <div className=\"card-text mt-auto align-self-start ps-3 pb-2\">\r\n                                {\r\n                                    value.gsx$devicepc.$t === \"TRUE\" ? <i className=\"fas fa-desktop pc me-3 text-black-50 fs-4\"></i> : null\r\n                                }\r\n                                {\r\n                                    value.gsx$devicemobile.$t === \"TRUE\" ? <i className=\"fas fa-mobile-alt mobile text-black-50 fs-4\"></i> : null\r\n                                }\r\n\r\n                            </div>\r\n                            <div className=\"card-text mt-auto align-self-start ps-3\">\r\n                                <a href={value.gsx$demolink.$t} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                    <button className=\"btn btn-primary text-white\">嘗試範例</button>\r\n                                </a>\r\n                                <button className=\"btn btn-outline-primary ms-3\" data-temp={value.gsx$tempid.$t}>案例參考</button>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                    })}\r\n                </div>\r\n            }\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Gallery;","import React, { useState, useEffect } from 'react';\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\n\r\nimport './showcase.scss';\r\n\r\n\r\n\r\nconst Showcase = () => {\r\n    const [showcaseList, setshowcaseList] = useState([])\r\n    let [loading, setLoading] = useState(false)\r\n    let [color] = useState(\"#1E9A4B\")\r\n\r\n    let filter_dimension = [];\r\n    let filter_platform = [];\r\n    let filter_device = [];\r\n    let filter_brand = [];\r\n    let filter_list = [];\r\n\r\n    const getData = async () => {\r\n        const res = await fetch(\"https://spreadsheets.google.com/feeds/list/1kJl_ioUAK1umhl9oCHF8Oo7u698QdngllHuwerOFpIo/1/public/values?alt=json\")\r\n        const data = await res.json()\r\n        setshowcaseList(data.feed.entry)\r\n    }\r\n\r\n    const filterDataArr = () => {\r\n        for (var i = 0; i < showcaseList.length; i++) {\r\n            filter_platform.push(showcaseList[i].gsx$platform.$t)\r\n            let arrPlatformString = filter_platform.toString()\r\n            let arrPlatform = arrPlatformString.split(\",\");\r\n            filter_platform = arrPlatform.filter((v, i, a) => a.indexOf(v) === i);\r\n\r\n            filter_device.push(showcaseList[i].gsx$device.$t)\r\n            let arrDeviceString = filter_device.toString()\r\n            let arrDevice = arrDeviceString.split(\",\");\r\n            filter_device = arrDevice.filter((v, i, a) => a.indexOf(v) === i);\r\n\r\n            filter_brand.push(showcaseList[i].gsx$brand.$t);\r\n            filter_brand = filter_brand.filter((v, i, a) => a.indexOf(v) === i);\r\n\r\n            filter_dimension.push(showcaseList[i].gsx$dimension.$t)\r\n            let arrDimenString = filter_dimension.toString()\r\n            let arrDimen = arrDimenString.split(\",\");\r\n            filter_dimension = arrDimen.filter((v, i, a) => a.indexOf(v) === i);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        let mounted = true\r\n        if (mounted) {\r\n            getData()\r\n            setLoading(true)\r\n        }\r\n        return function cleanup() {\r\n            mounted = false\r\n        }\r\n\r\n    }, [])\r\n\r\n    filterDataArr()\r\n\r\n    const displayRelatedContainer = () => {\r\n        const containers = document.querySelectorAll('div[name=\"data_container\"]');\r\n        let classes = '\\\\b(' + filter_list.join('|') + ')\\\\b', dimenRegex = new RegExp(classes, 'i');\r\n        containers.forEach(eContainer => {\r\n            let elClasses = ' ' + eContainer.getAttribute('class').replace(/\\s+/, ' ') + ' ';\r\n            let iBrand = eContainer.getAttribute('banner-brand');\r\n            if (filter_list.length > 0) {\r\n                if (dimenRegex.test(elClasses) || filter_list.indexOf(iBrand) > -1) {\r\n                    eContainer.style.display = \"block\";\r\n                } else {\r\n                    eContainer.style.display = \"none\";\r\n                }\r\n            } else {\r\n                eContainer.style.display = \"block\";\r\n            }\r\n\r\n        })\r\n\r\n    }\r\n\r\n    const toggle = (e) => {\r\n        const target = e.target;\r\n        const value = e.target.value;\r\n        if (target.checked) {\r\n            filter_list.push(value);\r\n            displayRelatedContainer()\r\n        } else {\r\n            for (var i = 0; i < filter_list.length; i++) {\r\n                if (filter_list[i] === value) {\r\n                    filter_list.splice(i, 1);\r\n                }\r\n            }\r\n            displayRelatedContainer()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!loading ?\r\n                < ClipLoader color={color} size={180}></ClipLoader>\r\n                :\r\n                <div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <span>Filter by: </span>\r\n                            <div className=\"row filter_cat\">\r\n                                <div className=\"col-md-2\">支援行動設備:</div>\r\n                                <div className=\"col-md-10\">\r\n                                    {filter_device.map((item, key) => {\r\n                                        return <div key={key} className=\"form-check\">\r\n                                            <input onChange={toggle} type=\"checkbox\" className=\"form-check-input\" id={item} value={item}></input>\r\n                                            <label htmlFor={item} className=\"form-check-label\">{item}</label>\r\n                                        </div>\r\n                                    })}\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className=\"row filter_cat\">\r\n                                <div className=\"col-md-2\">支援投遞平台:</div>\r\n                                <div className=\"col-md-10\">\r\n                                    {filter_platform.map((item, key) => {\r\n                                        return <div key={key} className=\"form-check\">\r\n                                            <input onChange={toggle} type=\"checkbox\" className=\"form-check-input\" id={item} value={item}></input>\r\n                                            <label htmlFor={item} className=\"form-check-label\">{item}</label>\r\n                                        </div>\r\n                                    })}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row filter_cat\">\r\n                                <div className=\"col-md-2\">品牌:</div>\r\n                                <div className=\"col-md-10\">\r\n                                    {filter_brand.map((item, key) => {\r\n                                        return <div key={key} className=\"form-check\">\r\n                                            <input onChange={toggle} type=\"checkbox\" className=\"form-check-input\" id={item} value={item}></input>\r\n                                            <label htmlFor={item} className=\"form-check-label\">{item}</label>\r\n                                        </div>\r\n                                    })}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row filter_cat\">\r\n                                <div className=\"col-md-2\">支援尺寸:</div>\r\n                                <div className=\"col-md-10\">\r\n                                    {filter_dimension.map((item, key) => {\r\n                                        if (item === '') {\r\n                                            return null;\r\n                                        } else {\r\n                                            return (\r\n                                                <div key={key} className=\"form-check\">\r\n                                                    <input type=\"checkbox\" onChange={toggle} className=\"form-check-input\" id={item} value={item}></input>\r\n                                                    <label htmlFor={item} className=\"form-check-label\">{item}</label>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                    })}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        {\r\n                            showcaseList.map((item, key) => {\r\n                                let dimension = item.gsx$dimension.$t.replace(/,/g, ' ');\r\n                                let device = item.gsx$device.$t.replace(/,/g, ' ');\r\n                                let platform = item.gsx$platform.$t.replace(/,/g, ' ');\r\n\r\n                                return (\r\n                                    <div key={key} name=\"data_container\" className={dimension + \" \" + device + \" \" + platform + \" \" + item.gsx$tempid.$t + \"col-xs-12 col-sm-6 col-md-3\"} banner-brand={item.gsx$brand.$t}>\r\n                                        <div className=\"card-body\">\r\n                                            <img src={item.gsx$previewimg.$t} alt={item.gsx$brand.$t} />\r\n                                            <h5 className='template_name card-title'>{item.gsx$brand.$t}</h5>\r\n                                            <div className=\"card-text\">{item.gsx$desc.$t}</div >\r\n                                            <button className=\"btn-outline-primary\">閱讀更多</button>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div >\r\n\r\n    );\r\n}\r\n\r\nexport default Showcase;","export default __webpack_public_path__ + \"static/media/performics_logo_white.39e2b285.svg\";","import React, { useState } from 'react';\nimport Gallery from './components/gallery/Gallery';\nimport Showcase from './components/showcase/Showcase';\nimport './App.scss';\nimport logo from './img/performics_logo_white.svg';\n\nconst App = () => {\n  const [showGallery, setshowGallery] = useState(true)\n  const [showShowcase, setshowShowcase] = useState(false)\n\n  const renderGallery = () => {\n    setshowGallery(true)\n    setshowShowcase(false)\n  }\n\n  const renderShowcase = () => {\n    setshowShowcase(true)\n    setshowGallery(false)\n  }\n  return (\n    <div className=\"container-fluid\">\n\n      <header className=\"header\">\n        <div className=\"container-lg\">\n          <nav className=\"navbar\">\n            <img src={logo} className=\"logo\" width=\"200\" alt=\"logo\" />\n          </nav>\n          <div className=\"home-title d-flex text-white\">\n            <div className=\"align-self-center\">\n              <div className=\"fs-3\">Rich Media</div>\n              <div className=\"fs-1\">創意數位廣告</div>\n            </div>\n\n          </div>\n        </div>\n      </header>\n\n      <div className=\"container-lg\">\n        <div>\n          <button onClick={renderGallery} className=\"m-4 btn btn-outline-primary\">Rich Media Template</button>\n          <button onClick={renderShowcase} className=\"m-4 btn btn-outline-primary\">Showcase</button>\n        </div>\n\n        {showGallery ? <Gallery></Gallery> : null}\n        {showShowcase ? <Showcase></Showcase> : null}\n\n      </div>\n\n      <footer>\n        <div className=\"container-lg mt-5 mb-3\">\n          <span className=\"fs-6 fw-light\">© 2019 Performics | Privacy Policy</span>\n        </div>\n      </footer>\n    </div>\n\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/scss/bootstrap.scss'\nimport \"@fortawesome/fontawesome-free/scss/fontawesome.scss\";\nimport \"@fortawesome/fontawesome-free/scss/solid.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}